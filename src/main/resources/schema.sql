create table if not exists users (
  id    bigint generated by default as identity not null,
  name  varchar(255) not null,
  email varchar(512) not null,
  constraint pk_user primary key (id),
  constraint uq_user_email unique (email)
);

create table if not exists requests (
  id           bigint generated by default as identity not null,
  description  varchar(512) not null,
  requester_id bigint,
  create_date  timestamp without time zone not null,
  constraint pk_request primary key (id),
  constraint fk_request_requester foreign key (requester_id) references users(id)
);

create table if not exists items (
  id           bigint generated by default as identity not null,
  name         varchar(255) not null,
  description  varchar(512) not null,
  is_available boolean not null,
  owner_id     bigint,
  request_id   bigint,
  constraint pk_item primary key (id),
  constraint fk_item_owner foreign key (owner_id) references users(id),
  constraint fk_item_request foreign key (request_id) references requests(id)
);

create table if not exists comments (
  id        bigint generated by default as identity not null,
  text      varchar(1024),
  item_id   bigint,
  author_id bigint,
  create_date timestamp without time zone not null,
  constraint pk_comment primary key (id),
  constraint fk_comment_item foreign key (item_id) references items(id),
  constraint fk_comment_author foreign key (author_id) references users(id)
);

create table if not exists bookings (
  id         bigint generated by default as identity not null,
  start_date timestamp without time zone not null,
  end_date   timestamp without time zone,
  item_id    bigint,
  booker_id  bigint,
  status     varchar(10),
  constraint pk_booking primary key (id),
  constraint fk_booking_item foreign key (item_id) references items(id),
  constraint fk_booking_booker foreign key (booker_id) references users(id)
);